@model ISpanSTA.ViewModel.CExamPaperViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>CExamPaperViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>            
                <input type="hidden" asp-for="FExamPaperId" class="form-control" />                
                <div class="form-group">
                    <label asp-for="FClassPeriod" class="control-label"></label>
                    @*<input asp-for="FClassPeriod" class="form-control" />*@
                    <select asp-for="FClassPeriod" class="form-control"></select>
                    <span asp-validation-for="FClassPeriod" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="FCourseName" class="control-label"></label>
                @*<input asp-for="FCourseId" class="form-control" />*@
                <select asp-for="FCourseId" class="form-control"></select>
                <span asp-validation-for="FCourseId" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="FCourseName" class="control-label"></label>
                <input asp-for="FCourseName" class="form-control" />
                <span asp-validation-for="FCourseName" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="FName" class="control-label"></label>
                <input asp-for="FName" class="form-control" />
                <span asp-validation-for="FName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FDescription" class="control-label"></label>
                <input asp-for="FDescription" class="form-control" />
                <span asp-validation-for="FDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FBegin" class="control-label"></label>
                <input asp-for="FBegin" class="form-control" />
                <span asp-validation-for="FBegin" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FEnd" class="control-label"></label>
                <input asp-for="FEnd" class="form-control" />
                <span asp-validation-for="FEnd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FTimeLimit" class="control-label"></label>
                <input asp-for="FTimeLimit" class="form-control" />
                <span asp-validation-for="FTimeLimit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FReveal" class="control-label"></label>
                <input asp-for="FReveal" class="form-control" />
                <span asp-validation-for="FReveal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FOrder" class="control-label"></label>
                <input asp-for="FOrder" class="form-control" />
                <span asp-validation-for="FOrder" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    <script>
    const selClass = document.querySelector('#FClassPeriod');
    const selCourse = document.querySelector('#FCourseId');

        selClass.addEventListener('change', async function () {
            const classfi = selClass.options[selClass.selectedIndex].value;
            await LoadCourse(classfi);
    })



    async function LoadClassCourse() {
        //載入班級
        const responseClass = await fetch('@Url.Content("~/TExamPaper/classFilter")');
        renderClass(await responseClass.json());

        //根據班種載入課程
        const classfi = selClass.options[selClass.selectedIndex].value;
        await LoadCourse(classfi);

    }

        LoadClassCourse();

        async function LoadCourse(classPeriod) {
            const responseCourse = await fetch("@Url.Content("~/TExamPaper/courseFilter")" + `?classPeriod=${classPeriod}`);
        renderCourse(await responseCourse.json());
    }

        function renderClass(datas) {
            selClass.options.length = 0;
            datas.forEach((item) => {
                const opt = new Option(item.fClassPeriod, item.fClassPeriod);
                selClass.options.add(opt);
            })
        }

    function renderCourse(datas) {
        selCourse.options.length = 0;
        datas.forEach((item) => {
            const opt = new Option(item.fCourse, item.fCourseId);
            selCourse.options.add(opt);
        })
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
